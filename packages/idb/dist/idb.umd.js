!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Idb=t()}(this,(function(){"use strict";const e=(e,t)=>{const r=e=>Object.prototype.toString.call(e).slice(8,-1);return Array.isArray(t)?t.includes(r(e)):r(e)===t},t=e=>e?{keyPath:e}:{autoIncrement:!0},r=function(t,r,s){const n=["Object","Array","Number","String"],o=s||this.getTName();return new Promise(((s,i)=>{if(e(r,n)){((e,t,r)=>new Promise(((s,n)=>{let o=null;if(Array.isArray(t)){const n=[],i=()=>{const[a]=t.splice(0,1);a?(o=e[r](a),o.onsuccess=e=>{e.target.result&&n.push(e.target.result),i()}):s({mode:r,result:n,statu:"done"})};i()}else o=e[r](t),o.onsuccess=e=>{s({mode:r,statu:e.target.readyState,result:e.target.result||null})};o.onerror=e=>n({mode:r,statu:e.target.error.message,result:e})})))(this.getDB().transaction([o],"readwrite").objectStore(o),r,t).then((e=>s(e))).catch(i)}else i(new Error(`IDB-ERROR-${t}: 参数缺失或类型不正确!`))}))},s=function(e,t,s){return this.registers({action:e,handler:()=>r.call(this,e,t,s)}),this},n=function(e){return this.getDB().objectStoreNames.contains(e)},o=function(e,r){const s=e||this.getTName();return this.registers({action:"table",handler:()=>new Promise(((e,o)=>{if(n.call(this,s))this.tName=s,e();else{const n=t(r),{transaction:i}=this.getDB().createObjectStore(s,n);i.oncomplete=()=>{this.tName=s,this.primaryKey=n,e()},i.onabort=()=>o(new Error("IDB-ERROR-CREATE: 新建数据库失败!"))}}))}),this},i=function(){return new Promise(((e,t)=>{const r=[],s=this.getTName(),n=this.getDB().transaction(s).objectStore(s).openCursor();n.onsuccess=t=>{const s=t.target.result;s?(r.push(s.value),s.continue()):e(r)},n.onerror=e=>t(e)}))},a=function(){return this.registers({action:"getAll",handler:i.bind(this)}),this},c=function(){return this.registers({action:"clear",handler:()=>new Promise(((e,t)=>{const r=this.getTName(),s=this.getDB().transaction([r],"readwrite").objectStore(r),{transaction:n}=s.clear();n.oncomplete=t=>e({statu:"done",mode:"clear",result:t}),n.onerror=e=>t({statu:"error",mode:"clear",resut:e})}))}),this},l=function(r){return this.registers({action:"batchCreate",handler:()=>new Promise(((s,o)=>{if(e(r,"Array")){const e=this.getDB(),i=r.filter((e=>!n.call(this,e.name)));i.length?i.forEach((r=>{const{transaction:n}=e.createObjectStore(r.name,t(r.keyPath));n.oncomplete=s,n.onabort=()=>o(new Error(`IDB-ERROR-BATCH-CREATE: 新建数据库 ${r.name} 失败!`))})):s()}else o({mode:"batch-create",statu:"error",result:new Error("IDB-ERROR-OPEN: 批量创建时参数期望是一个数组!")})}))}),this},u=function(e,t){const r=s=>{const[n]=this.tasks.splice(0,1);n?n.handler().then((e=>r(e))).catch((e=>{throw this.tasks=[],t&&t(e),e})):e&&e(s)};r()};return class{constructor(){this.db=null,this.primaryKey=null,this.tName=null,this.tasks=[]}getDB(){if(this.db)return this.db;throw new Error("IDB-ERROR-OPEN: 未获取到数据库!")}getTName(){if(this.tName)return this.tName;throw new Error("IDB-ERROR-TNAME: 未找到可操作的表对象!")}getPrimaryKey(){if(this.primaryKey)return this.primaryKey;throw new Error("IDB-ERROR-PRIMARYKEY: 请设置主键索引!")}registers(e){this.tasks.push(e)}open(t,r){return this.registers({action:"open",handler:()=>new Promise(((s,n)=>{if(e(t,"String")){const e=(()=>{const e=indexedDB||window.indexedDB||global.indexedDB||self.indexedDB;if(!e)throw new SyntaxError("INFO: 当前环境不支持 IndexedDB 操作!");return e})().open(t,r);e.onupgradeneeded=e=>{this.db=e.target.result,s({statu:"done",result:e.target.result,mode:"open-upgradeneeded"})},e.onblocked=()=>{console.warn("IDB-INFO-ERROR: 数据库已被锁定!")},e.onsuccess=()=>{this.db=e.result,s({statu:"done",result:e.result,mode:"open-success"})},e.onerror=e=>n({statu:"error",result:e,mode:"open-error"})}else n({mode:"open",statu:"error",result:new Error("IDB-ERROR-OPEN: 数据库名称参数缺失或类型不正确!")})}))}),this}table(...e){return o.call(this,...e)}add(...e){return s.call(this,"add",...e)}put(...e){return s.call(this,"put",...e)}get(...e){return s.call(this,"get",...e)}delete(...e){return s.call(this,"delete",...e)}clear(){return c.call(this)}close(){return this.registers({action:"close",handler:e=>{this.getDB().close(),setTimeout(e,100)}}),this}batchCreateTable(e){return l.call(this,e)}getAll(){return a.call(this)}exec(e,t){u.call(this,e,t)}}}));
